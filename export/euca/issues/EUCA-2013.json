{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13113","self":"https://eucalyptus.atlassian.net/rest/api/2/issue/13113","key":"EUCA-2013","fields":{"issuetype":{"self":"https://eucalyptus.atlassian.net/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://eucalyptus.atlassian.net/secure/viewavatar?size=xsmall&avatarId=14803&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":14803},"timespent":28800,"customfield_13100":null,"project":{"self":"https://eucalyptus.atlassian.net/rest/api/2/project/10000","id":"10000","key":"EUCA","name":"Eucalyptus","avatarUrls":{"48x48":"https://eucalyptus.atlassian.net/secure/projectavatar?pid=10000&avatarId=10011","24x24":"https://eucalyptus.atlassian.net/secure/projectavatar?size=small&pid=10000&avatarId=10011","16x16":"https://eucalyptus.atlassian.net/secure/projectavatar?size=xsmall&pid=10000&avatarId=10011","32x32":"https://eucalyptus.atlassian.net/secure/projectavatar?size=medium&pid=10000&avatarId=10011"}},"customfield_11000":null,"customfield_11001":null,"fixVersions":[{"self":"https://eucalyptus.atlassian.net/rest/api/2/version/10005","id":"10005","description":"Eucalyptus 3.1.0","name":"3.1.0","archived":false,"released":true,"releaseDate":"2012-06-25"}],"aggregatetimespent":28800,"customfield_10310":null,"resolution":{"self":"https://eucalyptus.atlassian.net/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_10311":null,"customfield_11401":null,"customfield_11400":null,"customfield_10302":null,"customfield_10104":[],"customfield_10500":{"self":"https://eucalyptus.atlassian.net/rest/api/2/customFieldOption/10403","value":"Not Applicable","id":"10403"},"customfield_10303":null,"customfield_10105":null,"customfield_10700":null,"customfield_10304":[{"self":"https://eucalyptus.atlassian.net/rest/api/2/version/10005","id":"10005","description":"Eucalyptus 3.1.0","name":"3.1.0","archived":false,"released":true,"releaseDate":"2012-06-25"}],"customfield_10701":null,"customfield_10306":null,"customfield_10702":null,"customfield_10703":null,"customfield_10308":null,"customfield_10704":null,"resolutiondate":"2012-05-23T11:53:53.030-0500","customfield_10309":null,"customfield_10705":null,"workratio":9223372036854775807,"lastViewed":null,"watches":{"self":"https://eucalyptus.atlassian.net/rest/api/2/issue/EUCA-2013/watchers","watchCount":1,"isWatching":false},"created":"2012-05-10T15:43:17.711-0500","customfield_12000":null,"priority":{"self":"https://eucalyptus.atlassian.net/rest/api/2/priority/3","iconUrl":"https://eucalyptus.atlassian.net/images/icons/priorities/major.svg","name":"Major","id":"3"},"customfield_12400":null,"customfield_12201":null,"customfield_12600":"{repository={count=3, dataType=repository}, json={\"cachedValue\":{\"errors\":[],\"summary\":{\"repository\":{\"overall\":{\"count\":3,\"lastUpdated\":\"2012-05-22T13:04:16.000-0500\",\"dataType\":\"repository\"},\"byInstanceType\":{\"github\":{\"count\":3,\"name\":\"GitHub\"}}}}},\"isStale\":true}}","customfield_10102":null,"customfield_10300":null,"customfield_10301":null,"labels":[],"customfield_11700":null,"aggregatetimeoriginalestimate":0,"timeestimate":0,"versions":[{"self":"https://eucalyptus.atlassian.net/rest/api/2/version/10005","id":"10005","description":"Eucalyptus 3.1.0","name":"3.1.0","archived":false,"released":true,"releaseDate":"2012-06-25"}],"customfield_11901":null,"issuelinks":[],"assignee":{"self":"https://eucalyptus.atlassian.net/rest/api/2/user?username=chuck","name":"chuck","key":"chuck","accountId":"557058:95e4b012-7cd1-4fd1-995d-eba573d35653","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=48&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3FownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=24&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dsmall%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=16&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dxsmall%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=32&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dmedium%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue"},"displayName":"Chuck","active":false,"timeZone":"America/Los_Angeles"},"updated":"2013-01-09T19:50:31.361-0600","status":{"self":"https://eucalyptus.atlassian.net/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://eucalyptus.atlassian.net/images/icons/statuses/generic.png","name":"Closed","id":"6","statusCategory":{"self":"https://eucalyptus.atlassian.net/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://eucalyptus.atlassian.net/rest/api/2/component/10010","id":"10010","name":"Node Controller"}],"timeoriginalestimate":0,"description":"V 3.1, build from source, Lucid, using Ken's kernel and connection pool enhancements\r\n\r\nDuring a scale test, one of the NCs in the system began to segfault.  Dan explained how I could attach a debugger to the NC (which was repeatedly segfaulting) and the offending line of code is\r\n\r\n\r\n        if (strlen (store_path)<1 || strlen (blob_id)<1)\r\n            continue; // TODO: print a warning about store/blob corruption?\r\n\r\nin blobstore.c.  That was line 2577 in the version I was testing.\r\n\r\nFrom the debugger, it became clear that blob_id was NULL and thus strlen was segfaulting by referencing through a NULL pointer.\r\n\r\nChecking the assignment of store_path and blob_id\r\n\r\n\r\n       char * store_path = strtok (array [i], \" \");\r\n        char * blob_id    = strtok (NULL, \" \"); // the remaining entries in array[i] are ignored\r\n\r\n\r\nThus, array[i] is assumed to have at least two \"tokens\" in it.  In this case, i==2 and \r\n\r\narray[2] == \"2544\"\r\n\r\nThus store_path == \"2544\" and blob_id == NULL.\r\n\r\narray[i] is loaded by a read from the meta data file\r\n\r\n\r\n    if (read_array_blockblob_metadata_path (BLOCKBLOB_PATH_DEPS, bb->store, bb->id, &array, &array_size)==-1) {\r\n\r\nchecking that file in the file system,\r\n\r\n\r\n/opt/eee-root/var/lib/eucalyptus/instances/work KFSFRLUMJOFSJOSFC4ULQ/i-4550433B/emi-65DA3BAC-499872db map 63 2883584\r\n/opt/eee-root/var/lib/eucalyptus/instances/work KFSFRLUMJOFSJOSFC4ULQ/i-4550433B/emi-65DA3BAC-499872db map 63 2883584\r\n2144\r\n/opt/eee-root/var/lib/eucalyptus/instances/work KFSFRLUMJOFSJOSFC4ULQ/i-4550433B/prt-00512swap-ac8d5670 map 3145791 1048576\r\n\r\nNotice that entry 3 (corresponding to array[2]) is the string 2544.  This file appears to be corrupted.\r\n\r\nChecking the code further, there are two type of routines that manipulate the metadata files (both in blobstore.c)\r\n\r\nstatic int read_blockblob_metadata_path (blockblob_path_t path_t, const blobstore * bs, const char * bb_id, char * str, int str_size)\r\n\r\nand\r\n\r\nstatic int read_array_blockblob_metadata_path (blockblob_path_t path_t, const blobstore * bs, const char * bb_id, char *** array, int * array_size)\r\n\r\nthe first routine reads a single record (text line) from the meta data file and the second reads multiple records (each on a separate line).  \r\n\r\nThe single line version locks the file before accessing it\r\n\r\n   int fd = open_and_lock (path,\r\n                            BLOBSTORE_FLAG_RDONLY,\r\n                            BLOBSTORE_METADATA_TIMEOUT_USEC,\r\n                            BLOBSTORE_FILE_PERM);\r\n    if (fd == -1)\r\n        return -1;\r\n    int size = fd_to_buf (fd, str, str_size);\r\n    int ret_close = close_and_unlock (fd);\r\n\r\nbut the multiple line version does not lock the file\r\n\r\n    set_blockblob_metadata_path (path_t, bs, bb_id, path, sizeof (path));\r\n\r\n    FILE * fp = fopen (path, \"r\");\r\n    if (fp == NULL) {\r\n        * array = NULL;\r\n        * array_size = 0;\r\n        return 0;\r\n    }\r\n\r\n    int i;\r\n    size_t n;\r\n    char ** lines = NULL;\r\n    for (i=0; !feof(fp); i++) {\r\n        char * line = NULL;\r\n        if (getline (&line, &n, fp)==-1) {\r\n            if (feof(fp)) { // need this when '\\n' is last char in the file\r\n                free (line);\r\n                break;\r\n            }\r\n\r\nchecking the write routines, \r\n\r\nstatic int write_blockblob_metadata_path (blockblob_path_t path_t, const blobstore * bs, const char * bb_id, const char * str)\r\n\r\nand\r\n\r\nstatic int write_array_blockblob_metadata_path (blockblob_path_t path_t, const blobstore * bs, const char * bb_id, char ** array, int array_size)\r\n\r\n\r\nthe same is true with respect to synchronization.  That is, the single record version locks the file but the mulirecord version does not.\r\n\r\nThus my speculation is that the corrupt .deps file results from a race condition in the multi-line versions that can be alleviated through locking.\r\n\r\n\r\n","customfield_13000":null,"customfield_13200":null,"customfield_11300":null,"customfield_11500":null,"timetracking":{"originalEstimate":"0m","remainingEstimate":"0m","timeSpent":"1d","originalEstimateSeconds":0,"remainingEstimateSeconds":0,"timeSpentSeconds":28800},"customfield_10401":null,"customfield_10005":null,"customfield_10600":null,"customfield_12900":null,"attachment":[],"aggregatetimeestimate":0,"summary":".deps metadata file corrupts under NC load","creator":{"self":"https://eucalyptus.atlassian.net/rest/api/2/user?username=rich","name":"rich","key":"rich","accountId":"557058:8c482bdc-e25e-4adf-8ce3-d545bda65679","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/836ed5700fb9db2dd603525a729cf69f?s=48&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3FavatarId%3D10122%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/836ed5700fb9db2dd603525a729cf69f?s=24&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dsmall%26avatarId%3D10122%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/836ed5700fb9db2dd603525a729cf69f?s=16&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dxsmall%26avatarId%3D10122%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/836ed5700fb9db2dd603525a729cf69f?s=32&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dmedium%26avatarId%3D10122%26noRedirect%3Dtrue"},"displayName":"Rich Wolski","active":true,"timeZone":"US/Central"},"subtasks":[],"reporter":{"self":"https://eucalyptus.atlassian.net/rest/api/2/user?username=rich","name":"rich","key":"rich","accountId":"557058:8c482bdc-e25e-4adf-8ce3-d545bda65679","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/836ed5700fb9db2dd603525a729cf69f?s=48&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3FavatarId%3D10122%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/836ed5700fb9db2dd603525a729cf69f?s=24&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dsmall%26avatarId%3D10122%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/836ed5700fb9db2dd603525a729cf69f?s=16&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dxsmall%26avatarId%3D10122%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/836ed5700fb9db2dd603525a729cf69f?s=32&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dmedium%26avatarId%3D10122%26noRedirect%3Dtrue"},"displayName":"Rich Wolski","active":true,"timeZone":"US/Central"},"aggregateprogress":{"progress":28800,"total":28800,"percent":100},"customfield_10000":"10000_*:*_1_*:*_1109435465_*|*_5_*:*_1_*:*_0","customfield_12100":"0|i01bef:","customfield_10001":"2012-05-23T11:53:53.044-0500","customfield_10002":null,"customfield_10200":null,"customfield_10003":null,"customfield_12500":null,"customfield_10400":null,"customfield_10116":null,"customfield_11600":["chuck(chuck)","rich(rich)"],"customfield_10117":null,"environment":null,"customfield_11800":null,"customfield_11802":null,"duedate":null,"customfield_11805":null,"customfield_11806":null,"progress":{"progress":28800,"total":28800,"percent":100},"votes":{"self":"https://eucalyptus.atlassian.net/rest/api/2/issue/EUCA-2013/votes","votes":0,"hasVoted":false},"comment":{"comments":[{"self":"https://eucalyptus.atlassian.net/rest/api/2/issue/13113/comment/27452","id":"27452","author":{"self":"https://eucalyptus.atlassian.net/rest/api/2/user?username=chuck","name":"chuck","key":"chuck","accountId":"557058:95e4b012-7cd1-4fd1-995d-eba573d35653","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=48&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3FownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=24&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dsmall%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=16&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dxsmall%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=32&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dmedium%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue"},"displayName":"Chuck","active":false,"timeZone":"America/Los_Angeles"},"body":"Implemented solution presented by Rich. Now all file descriptor access to a metadata file should be done through a call to open_and_lock() and close_and_unlock(). This will prevent the concurrent access that as caused the data to get corrupted. \r\n\r\nI ran multiple successful eee-sequence-01 tests as well as some instance stress test with Vic without a problem. I also ran test_blobstore successfully and validated it using valgrind for leaks and errors.\r\n\r\nRich also loaded a build from my branch on his setup where he has been able to recreate the issue and so far the issue did not occur. ","updateAuthor":{"self":"https://eucalyptus.atlassian.net/rest/api/2/user?username=chuck","name":"chuck","key":"chuck","accountId":"557058:95e4b012-7cd1-4fd1-995d-eba573d35653","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=48&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3FownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=24&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dsmall%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=16&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dxsmall%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=32&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dmedium%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue"},"displayName":"Chuck","active":false,"timeZone":"America/Los_Angeles"},"created":"2012-05-23T11:53:53.044-0500","updated":"2012-05-23T11:53:53.044-0500"}],"maxResults":1,"total":1,"startAt":0},"customfield_11808":null,"worklog":{"startAt":0,"maxResults":20,"total":1,"worklogs":[{"self":"https://eucalyptus.atlassian.net/rest/api/2/issue/13113/worklog/10204","author":{"self":"https://eucalyptus.atlassian.net/rest/api/2/user?username=chuck","name":"chuck","key":"chuck","accountId":"557058:95e4b012-7cd1-4fd1-995d-eba573d35653","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=48&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3FownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=24&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dsmall%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=16&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dxsmall%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=32&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dmedium%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue"},"displayName":"Chuck","active":false,"timeZone":"America/Los_Angeles"},"updateAuthor":{"self":"https://eucalyptus.atlassian.net/rest/api/2/user?username=chuck","name":"chuck","key":"chuck","accountId":"557058:95e4b012-7cd1-4fd1-995d-eba573d35653","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=48&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3FownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=24&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dsmall%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=16&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dxsmall%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/39b69736417cafd9d6dddeb1c2e00169?s=32&d=https%3A%2F%2Feucalyptus.atlassian.net%2Fsecure%2Fuseravatar%3Fsize%3Dmedium%26ownerId%3Dchuck%26avatarId%3D12900%26noRedirect%3Dtrue"},"displayName":"Chuck","active":false,"timeZone":"America/Los_Angeles"},"comment":"Implemented solution presented by Rich. Now all file descriptor access to a metadata file should be done through a call to open_and_lock() and close_and_unlock(). This will prevent the concurrent access that as caused the data to get corrupted. \r\n\r\nI ran multiple successful eee-sequence-01 tests as well as some instance stress test with Vic without a problem. I also ran test_blobstore successfully and validated it using valgrind for leaks and errors.\r\n\r\nRich also loaded a build from my branch on his setup where he has been able to recreate the issue and so far the issue did not occur. ","created":"2012-05-23T11:53:53.030-0500","updated":"2012-05-23T11:53:53.030-0500","started":"2012-05-17T11:49:00.000-0500","timeSpent":"1d","timeSpentSeconds":28800,"id":"10204","issueId":"13113"}]}}}