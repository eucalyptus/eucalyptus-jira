diff --git a/clc/modules/bootstrap/src/main/native/arguments.ggo.in b/clc/modules/bootstrap/src/main/native/arguments.ggo.in
index 7ca75a2..2e7cecb 100644
--- a/clc/modules/bootstrap/src/main/native/arguments.ggo.in
+++ b/clc/modules/bootstrap/src/main/native/arguments.ggo.in
@@ -120,6 +120,7 @@ option "java-home"             j   "Alternative way to specify JAVA_HOME."
 option "jvm-name"              -   "Which JVM type to run (see jvm.cfg)."              string  typestr="JVMNAME"         default="-server"       no     hidden
 option "jvm-args"              X   "Arguments to pass to the JVM."                     string                                                  optional multiple
 option "jmx"                   -   "Launch with JMX enabled."                          flag                              off
+option "mlock"                   -   "mlockall JNI_JavaVM."                          flag                              off hidden
 option "debug"                 d   "Launch with debugger enabled."                     flag                              off
 option "verbose"               v   "Launch the JVM w/ verbose output flags."           flag                              off
 option "debug-port"            -   "Set the port to use for the debugger."             int                               default="5005"          no     dependon="debug"
diff --git a/clc/modules/bootstrap/src/main/native/eucalyptus-bootstrap.c b/clc/modules/bootstrap/src/main/native/eucalyptus-bootstrap.c
index 074066e..434acc1 100644
--- a/clc/modules/bootstrap/src/main/native/eucalyptus-bootstrap.c
+++ b/clc/modules/bootstrap/src/main/native/eucalyptus-bootstrap.c
@@ -100,6 +100,7 @@
 #include <stdlib.h>
 #include <sys/time.h>
 #include <sys/resource.h>
+#include <sys/mman.h>
 
 #define _LINUX_FS_H
 
@@ -729,6 +730,11 @@ char *java_library_path(euca_opts * args)
 
 int java_init(euca_opts * args, java_home_t * data)
 {
+    int mlockrc=0;
+    if (args->mlock_flag) {
+      __die((mlockrc=mlockall(MCL_FUTURE))!=0,"mlockall failed with rc=%d", mlockrc);
+      __debug("mlockall(MCL_FUTURE)=0");
+    }
     jint(*hotspot_main) (JavaVM **, JNIEnv **, JavaVMInitArgs *);
     char *libjvm_path = NULL;
     if ((libjvm_path = java_library(args, data)) == NULL)
diff --git a/clc/modules/bootstrap/src/main/native/eucalyptus-opts.c b/clc/modules/bootstrap/src/main/native/eucalyptus-opts.c
index b7918f6..38b4246 100644
--- a/clc/modules/bootstrap/src/main/native/eucalyptus-opts.c
+++ b/clc/modules/bootstrap/src/main/native/eucalyptus-opts.c
@@ -39,7 +39,7 @@ const char *eucalyptus_opts_full_help[] = {
   "  -V, --version                 Print version and exit",
   "\nBootstrap Configuration:",
   "  -u, --user=USERNAME           User to drop privs to after starting.\n                                  (default=`eucalyptus')",
-  "  -h, --home=DIRECTORY          Eucalyptus home directory.  (default=`/')",
+  "  -h, --home=DIRECTORY          Eucalyptus home directory.\n                                  (default=`/opt/eucalyptus/')",
   "      --extra-version=EXTRAVERSION\n                                Extra version string.  (default=`')",
   "      --initialize              Perform first-time setup.  This is run one time\n                                  (only!) on the first cloud controller before\n                                  the first time it is run.  (default=off)",
   "      --upgrade                 Perform database upgrade procedure and exit\n                                  immediately after completion.  Normally,\n                                  upgrade is performed in-line with regular\n                                  execution.  This flag causes upgrade to be\n                                  run and then for the process to terminate.\n                                  Useful for debugging upgrade failures.\n                                  (default=off)",
@@ -52,7 +52,7 @@ const char *eucalyptus_opts_full_help[] = {
   "  -D, --define=STRING           Set system properties.",
   "  -f, --fork                    Fork and daemonize Eucalyptus.  (default=off)",
   "  -k, --kill                    Kill a daemonized Eucalyptus.  (default=off)",
-  "      --pidfile=FILENAME        Location for the pidfile.\n                                  (default=`/var/run/eucalyptus-cloud.pid')",
+  "      --pidfile=FILENAME        Location for the pidfile.\n                                  (default=`/opt/eucalyptus/var/run/eucalyptus-cloud.pid')",
   "      --db-home=DIRECTORY       Set path to database home directory\n                                  (default=`')",
   "\nLogging Configuration:",
   "  -l, --log-level=FILENAME      Control the log level for console output.\n                                  (default=`INFO')",
@@ -75,10 +75,11 @@ const char *eucalyptus_opts_full_help[] = {
   "      --disable-dns             DEPRECATED DO NOT USE. IT DOES NOTHING.\n                                  (default=off)",
   "      --disable-storage         DEPRECATED DO NOT USE. IT DOES NOTHING.\n                                  (default=off)",
   "\nJava Options:",
-  "  -j, --java-home=DIRECTORY     Alternative way to specify JAVA_HOME.\n                                  (default=`/usr/lib/jvm/java-1.7.0')",
+  "  -j, --java-home=DIRECTORY     Alternative way to specify JAVA_HOME.\n                                  (default=`/usr/lib/jvm/java-7-openjdk-amd64')",
   "      --jvm-name=JVMNAME        Which JVM type to run (see jvm.cfg).\n                                  (default=`-server')",
   "  -X, --jvm-args=STRING         Arguments to pass to the JVM.",
   "      --jmx                     Launch with JMX enabled.  (default=off)",
+  "      --mlock                   mlockall JNI_JavaVM.  (default=off)",
   "  -d, --debug                   Launch with debugger enabled.  (default=off)",
   "  -v, --verbose                 Launch the JVM w/ verbose output flags.\n                                  (default=off)",
   "      --debug-port=INT          Set the port to use for the debugger.\n                                  (default=`5005')",
@@ -124,10 +125,10 @@ init_help_array(void)
   eucalyptus_opts_help[28] = eucalyptus_opts_full_help[41];
   eucalyptus_opts_help[29] = eucalyptus_opts_full_help[43];
   eucalyptus_opts_help[30] = eucalyptus_opts_full_help[44];
-  eucalyptus_opts_help[31] = eucalyptus_opts_full_help[45];
-  eucalyptus_opts_help[32] = eucalyptus_opts_full_help[46];
-  eucalyptus_opts_help[33] = eucalyptus_opts_full_help[47];
-  eucalyptus_opts_help[34] = eucalyptus_opts_full_help[49];
+  eucalyptus_opts_help[31] = eucalyptus_opts_full_help[46];
+  eucalyptus_opts_help[32] = eucalyptus_opts_full_help[47];
+  eucalyptus_opts_help[33] = eucalyptus_opts_full_help[48];
+  eucalyptus_opts_help[34] = eucalyptus_opts_full_help[50];
   eucalyptus_opts_help[35] = 0; 
   
 }
@@ -199,6 +200,7 @@ void clear_given (struct eucalyptus_opts *args_info)
   args_info->jvm_name_given = 0 ;
   args_info->jvm_args_given = 0 ;
   args_info->jmx_given = 0 ;
+  args_info->mlock_given = 0 ;
   args_info->debug_given = 0 ;
   args_info->verbose_given = 0 ;
   args_info->debug_port_given = 0 ;
@@ -215,7 +217,7 @@ void clear_args (struct eucalyptus_opts *args_info)
   FIX_UNUSED (args_info);
   args_info->user_arg = gengetopt_strdup ("eucalyptus");
   args_info->user_orig = NULL;
-  args_info->home_arg = gengetopt_strdup ("/");
+  args_info->home_arg = gengetopt_strdup ("/opt/eucalyptus/");
   args_info->home_orig = NULL;
   args_info->extra_version_arg = gengetopt_strdup ("");
   args_info->extra_version_orig = NULL;
@@ -235,7 +237,7 @@ void clear_args (struct eucalyptus_opts *args_info)
   args_info->define_orig = NULL;
   args_info->fork_flag = 0;
   args_info->kill_flag = 0;
-  args_info->pidfile_arg = gengetopt_strdup ("/var/run/eucalyptus-cloud.pid");
+  args_info->pidfile_arg = gengetopt_strdup ("/opt/eucalyptus/var/run/eucalyptus-cloud.pid");
   args_info->pidfile_orig = NULL;
   args_info->db_home_arg = gengetopt_strdup ("");
   args_info->db_home_orig = NULL;
@@ -268,6 +270,7 @@ void clear_args (struct eucalyptus_opts *args_info)
   args_info->jvm_args_arg = NULL;
   args_info->jvm_args_orig = NULL;
   args_info->jmx_flag = 0;
+  args_info->mlock_flag = 0;
   args_info->debug_flag = 0;
   args_info->verbose_flag = 0;
   args_info->debug_port_arg = 5005;
@@ -338,14 +341,15 @@ void init_args_info(struct eucalyptus_opts *args_info)
   args_info->jvm_args_min = 0;
   args_info->jvm_args_max = 0;
   args_info->jmx_help = eucalyptus_opts_full_help[44] ;
-  args_info->debug_help = eucalyptus_opts_full_help[45] ;
-  args_info->verbose_help = eucalyptus_opts_full_help[46] ;
-  args_info->debug_port_help = eucalyptus_opts_full_help[47] ;
-  args_info->debug_noha_help = eucalyptus_opts_full_help[48] ;
-  args_info->debug_suspend_help = eucalyptus_opts_full_help[49] ;
-  args_info->profile_help = eucalyptus_opts_full_help[50] ;
-  args_info->profiler_home_help = eucalyptus_opts_full_help[51] ;
-  args_info->agentlib_help = eucalyptus_opts_full_help[52] ;
+  args_info->mlock_help = eucalyptus_opts_full_help[45] ;
+  args_info->debug_help = eucalyptus_opts_full_help[46] ;
+  args_info->verbose_help = eucalyptus_opts_full_help[47] ;
+  args_info->debug_port_help = eucalyptus_opts_full_help[48] ;
+  args_info->debug_noha_help = eucalyptus_opts_full_help[49] ;
+  args_info->debug_suspend_help = eucalyptus_opts_full_help[50] ;
+  args_info->profile_help = eucalyptus_opts_full_help[51] ;
+  args_info->profiler_home_help = eucalyptus_opts_full_help[52] ;
+  args_info->agentlib_help = eucalyptus_opts_full_help[53] ;
   
 }
 
@@ -632,6 +636,8 @@ arguments_dump(FILE *outfile, struct eucalyptus_opts *args_info)
   write_multiple_into_file(outfile, args_info->jvm_args_given, "jvm-args", args_info->jvm_args_orig, 0);
   if (args_info->jmx_given)
     write_into_file(outfile, "jmx", 0, 0 );
+  if (args_info->mlock_given)
+    write_into_file(outfile, "mlock", 0, 0 );
   if (args_info->debug_given)
     write_into_file(outfile, "debug", 0, 0 );
   if (args_info->verbose_given)
@@ -1287,6 +1293,7 @@ arguments_internal (
         { "jvm-name",	1, NULL, 0 },
         { "jvm-args",	1, NULL, 'X' },
         { "jmx",	0, NULL, 0 },
+        { "mlock",	0, NULL, 0 },
         { "debug",	0, NULL, 'd' },
         { "verbose",	0, NULL, 'v' },
         { "debug-port",	1, NULL, 0 },
@@ -1326,7 +1333,7 @@ arguments_internal (
         
           if (update_arg( (void *)&(args_info->home_arg), 
                &(args_info->home_orig), &(args_info->home_given),
-              &(local_args_info.home_given), optarg, 0, "/", ARG_STRING,
+              &(local_args_info.home_given), optarg, 0, "/opt/eucalyptus/", ARG_STRING,
               check_ambiguity, override, 0, 0,
               "home", 'h',
               additional_error))
@@ -1441,7 +1448,7 @@ arguments_internal (
         case 'j':	/* Alternative way to specify JAVA_HOME..  */
         
           if (update_multiple_arg_temp(&java_home_list, 
-              &(local_args_info.java_home_given), optarg, 0, "/usr/lib/jvm/java-1.7.0", ARG_STRING,
+              &(local_args_info.java_home_given), optarg, 0, "/usr/lib/jvm/java-7-openjdk-amd64", ARG_STRING,
               "java-home", 'j',
               additional_error))
             goto failure;
@@ -1597,7 +1604,7 @@ arguments_internal (
           
             if (update_arg( (void *)&(args_info->pidfile_arg), 
                  &(args_info->pidfile_orig), &(args_info->pidfile_given),
-                &(local_args_info.pidfile_given), optarg, 0, "/var/run/eucalyptus-cloud.pid", ARG_STRING,
+                &(local_args_info.pidfile_given), optarg, 0, "/opt/eucalyptus/var/run/eucalyptus-cloud.pid", ARG_STRING,
                 check_ambiguity, override, 0, 0,
                 "pidfile", '-',
                 additional_error))
@@ -1800,6 +1807,18 @@ arguments_internal (
               goto failure;
           
           }
+          /* mlockall JNI_JavaVM..  */
+          else if (strcmp (long_options[option_index].name, "mlock") == 0)
+          {
+          
+          
+            if (update_arg((void *)&(args_info->mlock_flag), 0, &(args_info->mlock_given),
+                &(local_args_info.mlock_given), optarg, 0, 0, ARG_FLAG,
+                check_ambiguity, override, 1, 0, "mlock", '-',
+                additional_error))
+              goto failure;
+          
+          }
           /* Set the port to use for the debugger..  */
           else if (strcmp (long_options[option_index].name, "debug-port") == 0)
           {
@@ -1891,7 +1910,7 @@ arguments_internal (
     &(args_info->define_orig), args_info->define_given,
     local_args_info.define_given, 0,
     ARG_STRING, define_list);
-  multiple_default_value.default_string_arg = "/usr/lib/jvm/java-1.7.0";
+  multiple_default_value.default_string_arg = "/usr/lib/jvm/java-7-openjdk-amd64";
   update_multiple_arg((void *)&(args_info->java_home_arg),
     &(args_info->java_home_orig), args_info->java_home_given,
     local_args_info.java_home_given, &multiple_default_value,
diff --git a/clc/modules/bootstrap/src/main/native/eucalyptus-opts.h b/clc/modules/bootstrap/src/main/native/eucalyptus-opts.h
index 82c1b6d..02a2376 100644
--- a/clc/modules/bootstrap/src/main/native/eucalyptus-opts.h
+++ b/clc/modules/bootstrap/src/main/native/eucalyptus-opts.h
@@ -43,7 +43,7 @@ struct eucalyptus_opts
   char * user_arg;	/**< @brief User to drop privs to after starting. (default='eucalyptus').  */
   char * user_orig;	/**< @brief User to drop privs to after starting. original value given at command line.  */
   const char *user_help; /**< @brief User to drop privs to after starting. help description.  */
-  char * home_arg;	/**< @brief Eucalyptus home directory. (default='/').  */
+  char * home_arg;	/**< @brief Eucalyptus home directory. (default='/opt/eucalyptus/').  */
   char * home_orig;	/**< @brief Eucalyptus home directory. original value given at command line.  */
   const char *home_help; /**< @brief Eucalyptus home directory. help description.  */
   char * extra_version_arg;	/**< @brief Extra version string. (default='').  */
@@ -82,7 +82,7 @@ struct eucalyptus_opts
   const char *fork_help; /**< @brief Fork and daemonize Eucalyptus. help description.  */
   int kill_flag;	/**< @brief Kill a daemonized Eucalyptus. (default=off).  */
   const char *kill_help; /**< @brief Kill a daemonized Eucalyptus. help description.  */
-  char * pidfile_arg;	/**< @brief Location for the pidfile. (default='/var/run/eucalyptus-cloud.pid').  */
+  char * pidfile_arg;	/**< @brief Location for the pidfile. (default='/opt/eucalyptus/var/run/eucalyptus-cloud.pid').  */
   char * pidfile_orig;	/**< @brief Location for the pidfile. original value given at command line.  */
   const char *pidfile_help; /**< @brief Location for the pidfile. help description.  */
   char * db_home_arg;	/**< @brief Set path to database home directory (default='').  */
@@ -128,7 +128,7 @@ struct eucalyptus_opts
   const char *disable_dns_help; /**< @brief DEPRECATED DO NOT USE. IT DOES NOTHING. help description.  */
   int disable_storage_flag;	/**< @brief DEPRECATED DO NOT USE. IT DOES NOTHING. (default=off).  */
   const char *disable_storage_help; /**< @brief DEPRECATED DO NOT USE. IT DOES NOTHING. help description.  */
-  char ** java_home_arg;	/**< @brief Alternative way to specify JAVA_HOME. (default='/usr/lib/jvm/java-1.7.0').  */
+  char ** java_home_arg;	/**< @brief Alternative way to specify JAVA_HOME. (default='/usr/lib/jvm/java-7-openjdk-amd64').  */
   char ** java_home_orig;	/**< @brief Alternative way to specify JAVA_HOME. original value given at command line.  */
   unsigned int java_home_min; /**< @brief Alternative way to specify JAVA_HOME.'s minimum occurreces */
   unsigned int java_home_max; /**< @brief Alternative way to specify JAVA_HOME.'s maximum occurreces */
@@ -143,6 +143,8 @@ struct eucalyptus_opts
   const char *jvm_args_help; /**< @brief Arguments to pass to the JVM. help description.  */
   int jmx_flag;	/**< @brief Launch with JMX enabled. (default=off).  */
   const char *jmx_help; /**< @brief Launch with JMX enabled. help description.  */
+  int mlock_flag;	/**< @brief mlockall JNI_JavaVM. (default=off).  */
+  const char *mlock_help; /**< @brief mlockall JNI_JavaVM. help description.  */
   int debug_flag;	/**< @brief Launch with debugger enabled. (default=off).  */
   const char *debug_help; /**< @brief Launch with debugger enabled. help description.  */
   int verbose_flag;	/**< @brief Launch the JVM w/ verbose output flags. (default=off).  */
@@ -204,6 +206,7 @@ struct eucalyptus_opts
   unsigned int jvm_name_given ;	/**< @brief Whether jvm-name was given.  */
   unsigned int jvm_args_given ;	/**< @brief Whether jvm-args was given.  */
   unsigned int jmx_given ;	/**< @brief Whether jmx was given.  */
+  unsigned int mlock_given ;	/**< @brief Whether mlock was given.  */
   unsigned int debug_given ;	/**< @brief Whether debug was given.  */
   unsigned int verbose_given ;	/**< @brief Whether verbose was given.  */
   unsigned int debug_port_given ;	/**< @brief Whether debug-port was given.  */
