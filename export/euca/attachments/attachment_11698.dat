Author: Luca Invernizzi <invernizzi.l@gmail.com>
Description: Use qemu driver in hankders_kvm
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/eucalyptus/+bug/676819

--- a/node/handlers_kvm.c	2011-03-01 06:33:58.000000000 -0800
+++ b/node/handlers_kvm.c	2011-11-25 00:32:33.703966870 -0800
@@ -270,7 +270,7 @@
         char attach_xml[1024];
         int err = 0;
         ncVolume *volume = &instance->volumes[i];
-        snprintf (attach_xml, 1024, "<disk type='block'><driver name='phy'/><source dev='%s'/><target dev='%s'/></disk>", volume->remoteDev, volume->localDevReal);
+        snprintf (attach_xml, 1024, "<disk type='block'><driver name='qemu'/><source dev='%s'/><target dev='%s'/></disk>", volume->remoteDev, volume->localDevReal);
         sem_p (hyp_sem);
         err = virDomainAttachDevice (dom, attach_xml);
         sem_v (hyp_sem);      
@@ -447,16 +447,16 @@
 		  rc = 1;
 		} else {
 		  if (nc->config_use_virtio_disk && virtio_dev) {
-		      snprintf (xml, 1024, "<disk type='block'><driver name='phy'/><source dev='%s'/><target dev='%s' bus='virtio'/></disk>", local_iscsi_dev, localDevReal);
+		      snprintf (xml, 1024, "<disk type='block'><driver name='qemu'/><source dev='%s'/><target dev='%s' bus='virtio'/></disk>", local_iscsi_dev, localDevReal);
 		  } else {
-		      snprintf (xml, 1024, "<disk type='block'><driver name='phy'/><source dev='%s'/><target dev='%s'/></disk>", local_iscsi_dev, localDevReal);
+		      snprintf (xml, 1024, "<disk type='block'><driver name='qemu'/><source dev='%s'/><target dev='%s'/></disk>", local_iscsi_dev, localDevReal);
 		  }
 		}
             } else {
                 if (nc->config_use_virtio_disk && virtio_dev) {
-                    snprintf (xml, 1024, "<disk type='block'><driver name='phy'/><source dev='%s'/><target dev='%s' bus='virtio'/></disk>", remoteDev, localDevReal);
+                    snprintf (xml, 1024, "<disk type='block'><driver name='qemu'/><source dev='%s'/><target dev='%s' bus='virtio'/></disk>", remoteDev, localDevReal);
                 } else {
-                    snprintf (xml, 1024, "<disk type='block'><driver name='phy'/><source dev='%s'/><target dev='%s'/></disk>", remoteDev, localDevReal);
+                    snprintf (xml, 1024, "<disk type='block'><driver name='qemu'/><source dev='%s'/><target dev='%s'/></disk>", remoteDev, localDevReal);
                 }
                 rc = stat(remoteDev, &statbuf);
                 if (rc) {
@@ -561,15 +561,15 @@
                 if((local_iscsi_dev = get_iscsi_target(nc->get_storage_cmd_path, remoteDev)) == NULL)
                     return ERROR;
                 if (nc->config_use_virtio_disk && virtio_dev) {
-                    snprintf (xml, 1024, "<disk type='block'><driver name='phy'/><source dev='%s'/><target dev='%s' bus='virtio'/></disk>", local_iscsi_dev, localDevReal);
+                    snprintf (xml, 1024, "<disk type='block'><driver name='qemu'/><source dev='%s'/><target dev='%s' bus='virtio'/></disk>", local_iscsi_dev, localDevReal);
                 } else {
-                    snprintf (xml, 1024, "<disk type='block'><driver name='phy'/><source dev='%s'/><target dev='%s'/></disk>", local_iscsi_dev, localDevReal);
+                    snprintf (xml, 1024, "<disk type='block'><driver name='qemu'/><source dev='%s'/><target dev='%s'/></disk>", local_iscsi_dev, localDevReal);
                 }
             } else {
                 if (nc->config_use_virtio_disk && virtio_dev) {
-   		    snprintf (xml, 1024, "<disk type='block'><driver name='phy'/><source dev='%s'/><target dev='%s' bus='virtio'/></disk>", remoteDev, localDevReal);
+   		    snprintf (xml, 1024, "<disk type='block'><driver name='qemu'/><source dev='%s'/><target dev='%s' bus='virtio'/></disk>", remoteDev, localDevReal);
                 } else {
-   		    snprintf (xml, 1024, "<disk type='block'><driver name='phy'/><source dev='%s'/><target dev='%s'/></disk>", remoteDev, localDevReal);
+   		    snprintf (xml, 1024, "<disk type='block'><driver name='qemu'/><source dev='%s'/><target dev='%s'/></disk>", remoteDev, localDevReal);
                 }
 	    }
             /* protect KVM calls, just in case */
