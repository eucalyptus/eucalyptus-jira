diff --git a/clc/modules/object-storage-common/src/main/resources/osg-binding.xml b/clc/modules/object-storage-common/src/main/resources/osg-binding.xml
index 08a0f46..68e6c76 100644
--- a/clc/modules/object-storage-common/src/main/resources/osg-binding.xml
+++ b/clc/modules/object-storage-common/src/main/resources/osg-binding.xml
@@ -671,7 +671,7 @@
         <value name="IsTruncated" field="isTruncated" usage="optional"/>
         <collection factory="org.jibx.runtime.Utility.arrayListFactory"
                     field="uploads">
-            <structure name="Uploads" map-as="com.eucalyptus.storage.msgs.s3.Upload"/>
+            <structure name="Upload" map-as="com.eucalyptus.storage.msgs.s3.Upload"/>
         </collection>
         <value name="Prefix" field="prefix" usage="optional"/>
         <value name="Delimiter" field="delimiter" usage="optional"/>
diff --git a/clc/modules/object-storage/src/main/java/com/eucalyptus/objectstorage/ObjectStorageGateway.java b/clc/modules/object-storage/src/main/java/com/eucalyptus/objectstorage/ObjectStorageGateway.java
index 3325689..8995ec6 100644
--- a/clc/modules/object-storage/src/main/java/com/eucalyptus/objectstorage/ObjectStorageGateway.java
+++ b/clc/modules/object-storage/src/main/java/com/eucalyptus/objectstorage/ObjectStorageGateway.java
@@ -162,8 +162,6 @@ import com.eucalyptus.util.EucalyptusCloudException;
 import com.google.common.base.Strings;
 import edu.ucsb.eucalyptus.msgs.ComponentProperty;
 import edu.ucsb.eucalyptus.util.SystemUtil;
-
-import org.apache.commons.lang.StringUtils;
 import org.apache.log4j.Logger;
 import org.jboss.netty.handler.codec.http.DefaultHttpResponse;
 import org.jboss.netty.handler.codec.http.HttpHeaders;
@@ -1999,13 +1997,12 @@ public class ObjectStorageGateway implements ObjectStorageService {
                 }
             }
             reply.setIsTruncated(result.isTruncated);
-            if(result.isTruncated) {
-                if(	result.getLastEntry() instanceof ObjectEntity) {
-                    reply.setNextKeyMarker(((ObjectEntity)result.getLastEntry()).getObjectKey());
-                } else {
-                    //If max-keys = 0, then last entry may be empty
-                    reply.setNextKeyMarker((result.getLastEntry() != null ? result.getLastEntry().toString() : ""));
-                }
+            if(result.getLastEntry() instanceof ObjectEntity) {
+                reply.setNextKeyMarker(((ObjectEntity)result.getLastEntry()).getObjectKey());
+                reply.setNextUploadIdMarker(((ObjectEntity)result.getLastEntry()).getUploadId());
+            } else {
+                //If max-keys = 0, then last entry may be empty
+                reply.setNextKeyMarker((result.getLastEntry() != null ? result.getLastEntry().toString() : ""));
             }
         }
 
