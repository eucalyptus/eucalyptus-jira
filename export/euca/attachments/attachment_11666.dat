--- clc/modules/image-manager/src/main/java/edu/ucsb/eucalyptus/cloud/ws/VolumeManager.java	2010-04-03 12:27:48.000000000 +0900
+++ clc/modules/image-manager/src/main/java/edu/ucsb/eucalyptus/cloud/ws/VolumeManager.java	2010-04-27 16:44:13.000000000 +0900
@@ -109,6 +109,7 @@
 
   private static String ID_PREFIX = "vol";
   private static Logger LOG = Logger.getLogger( VolumeManager.class );
+  private static Object ATTACH_VOLUME_LOCK = new Object();
 
   public static EntityWrapper<Volume> getEntityWrapper() {
     return new EntityWrapper<Volume>( PERSISTENCE_CONTEXT );
@@ -273,39 +274,41 @@
       throw new EucalyptusCloudException( "Cluster does not exist: " + vm.getPlacement() );
     }
 
-    for ( VmInstance v : VmInstances.getInstance().listValues() ) {
-      for ( AttachedVolume vol : v.getVolumes() ) {
-        if ( vol.getVolumeId().equals( request.getVolumeId() ) ) {
-          throw new EucalyptusCloudException( "Volume already attached: " + request.getVolumeId() );
+    synchronized (ATTACH_VOLUME_LOCK) {
+      for ( VmInstance v : VmInstances.getInstance().listValues() ) {
+        for ( AttachedVolume vol : v.getVolumes() ) {
+          if ( vol.getVolumeId().equals( request.getVolumeId() ) ) {
+            throw new EucalyptusCloudException( "Volume already attached: " + request.getVolumeId() );
+          }
         }
       }
-    }
 
-    EntityWrapper<Volume> db = VolumeManager.getEntityWrapper();
-    String userName = request.isAdministrator() ? null : request.getUserId();
-    Volume volume = null;
-    try {
-      volume = db.getUnique( Volume.named( userName, request.getVolumeId() ) );
-      db.commit();
-    } catch ( EucalyptusCloudException e ) {
-      LOG.debug( e, e );
-      db.rollback();
-      throw new EucalyptusCloudException( "Volume does not exist: " + request.getVolumeId() );
-    }
+      EntityWrapper<Volume> db = VolumeManager.getEntityWrapper();
+      String userName = request.isAdministrator() ? null : request.getUserId();
+      Volume volume = null;
+      try {
+        volume = db.getUnique( Volume.named( userName, request.getVolumeId() ) );
+        db.commit();
+      } catch ( EucalyptusCloudException e ) {
+        LOG.debug( e, e );
+        db.rollback();
+        throw new EucalyptusCloudException( "Volume does not exist: " + request.getVolumeId() );
+      }
 
-    if(!volume.getCluster().equals(cluster.getName())) {
-    	throw new EucalyptusCloudException("Can only attach volumes in the same cluster: " + request.getVolumeId());
-    } else if("invalid".equals(volume.getRemoteDevice())) {
-      throw new EucalyptusCloudException("Volume is not yet available: " + request.getVolumeId());
+      if(!volume.getCluster().equals(cluster.getName())) {
+        throw new EucalyptusCloudException("Can only attach volumes in the same cluster: " + request.getVolumeId());
+      } else if("invalid".equals(volume.getRemoteDevice())) {
+        throw new EucalyptusCloudException("Volume is not yet available: " + request.getVolumeId());
+      }
+      request.setRemoteDevice( volume.getRemoteDevice() );
+      QueuedEvent<AttachVolumeType> event = QueuedEvent.make( new VolumeAttachCallback(  ), request );
+      cluster.getMessageQueue().enqueue( event );
+
+      AttachedVolume attachVol = new AttachedVolume( volume.getDisplayName(), vm.getInstanceId(), request.getDevice(), volume.getRemoteDevice() );
+      vm.getVolumes().add( attachVol );
+      volume.setState( State.BUSY );
+      reply.setAttachedVolume( attachVol );
     }
-    request.setRemoteDevice( volume.getRemoteDevice() );
-    QueuedEvent<AttachVolumeType> event = QueuedEvent.make( new VolumeAttachCallback(  ), request );
-    cluster.getMessageQueue().enqueue( event );
-
-    AttachedVolume attachVol = new AttachedVolume( volume.getDisplayName(), vm.getInstanceId(), request.getDevice(), volume.getRemoteDevice() );
-    vm.getVolumes().add( attachVol );
-    volume.setState( State.BUSY );
-    reply.setAttachedVolume( attachVol );
     return reply;
   }
 
