{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "VPC stack with no instances covering vpc and subnet parameters and attributes",
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "InstanceTenancy": "default"
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "AttachInternetGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "Subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "10.0.0.0/24",
                "MapPublicIpOnLaunch": "true",
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "NetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "AssociateNetworkAcl": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAcl"
                },
                "SubnetId": {
                    "Ref": "Subnet"
                }
            }
        },
        "RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "AssociateRouteTable": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable"
                },
                "SubnetId": {
                    "Ref": "Subnet"
                }
            }
        },
        "Route": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "RouteTable"
                }
            }
        },
        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "VPC security group",
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "SecurityGroupEgress": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "FromPort": "0",
                "ToPort": "65535",
                "GroupId": {
                    "Ref": "SecurityGroup"
                },
                "IpProtocol": "-1"
            }
        },
        "SecurityGroupIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "FromPort": "22",
                "ToPort": "22",
                "GroupId": {
                    "Ref": "SecurityGroup"
                },
                "IpProtocol": "tcp"
            }
        }
    },
    "Outputs": {
        "VPCCidrBlock": {
            "Value": {
                "Fn::GetAtt": [
                    "VPC",
                    "CidrBlock"
                ]
            }
        },
        "VPCDefaultNetworkAcl": {
            "Value": {
                "Fn::GetAtt": [
                    "VPC",
                    "DefaultNetworkAcl"
                ]
            }
        },
        "VPCDefaultSecurityGroup": {
            "Value": {
                "Fn::GetAtt": [
                    "VPC",
                    "DefaultSecurityGroup"
                ]
            }
        },
        "SubnetAvailabilityZone": {
            "Value": {
                "Fn::GetAtt": [
                    "Subnet",
                    "AvailabilityZone"
                ]
            }
        },
        "AssociateNetworkAclAssociationId": {
            "Value": {
                "Fn::GetAtt": [
                    "AssociateNetworkAcl",
                    "AssociationId"
                ]
            }
        }
    }
}

