{"errors":[],"detail":[{"repositories":[{"name":"eucalyptus","url":"https://github.com/eucalyptus/eucalyptus","commits":[{"id":"6b3be9c496311f9fce0e1d57b0d7fdc077548cc0","displayId":"6b3be9c","authorTimestamp":"2015-10-07T12:04:43.000+0000","url":"https://github.com/eucalyptus/eucalyptus/commit/6b3be9c496311f9fce0e1d57b0d7fdc077548cc0","author":{"name":"Mauricio Tsugawa","avatar":"https://secure.gravatar.com/avatar/unknown?d=mm","url":"https://github.com"},"fileCount":2,"merge":false,"message":"Fix for EUCA-11328\nAdded SNAT rules cleanup code","files":[{"path":"net/euca-to-mido.c","url":"https://github.com/eucalyptus/eucalyptus/commit/6b3be9c496311f9fce0e1d57b0d7fdc077548cc0#diff-0","changeType":"MODIFIED","linesAdded":50,"linesRemoved":4},{"path":"net/midonet-api.c","url":"https://github.com/eucalyptus/eucalyptus/commit/6b3be9c496311f9fce0e1d57b0d7fdc077548cc0#diff-1","changeType":"MODIFIED","linesAdded":13,"linesRemoved":12}]},{"id":"1212c25e79747dd3f7f99a7d32f316aa64cda84e","displayId":"1212c25","authorTimestamp":"2015-10-02T11:48:11.000+0000","url":"https://github.com/eucalyptus/eucalyptus/commit/1212c25e79747dd3f7f99a7d32f316aa64cda84e","author":{"name":"Mauricio Tsugawa","avatar":"https://secure.gravatar.com/avatar/unknown?d=mm","url":"https://github.com"},"fileCount":3,"merge":false,"message":"Fix for EUCA-11328\n\nAn EIP association is implemented in midonet with SNAT and DNAT rules.\nDNAT is implemented as a infilter of the VPC router, while SNAT is implemented as an\noutfilter of the VPC router.\nSNAT rule was only excluding the subnet+2 address (for metadata networking). To address this issue,\nthe subnet+2 address(es) is/are added to the private ip-address-group of the SG. SNAT rule should\nmatch the SG's private ip-address-group as source and do not perform SNAT.\nThe obvious implementation is to perform an inverse ip-address-group match. However, there is a bug\nin midonet-cli (Midokura ticket MN-3980) that does not parse/process inverse ip-address-group\nmatches properly.\nmidolman seems to implement the rule correctly. Due to inconvenience in debugging (once an inverse\nip-address-group matching rule is placed in a chain, listing rules in that chain fails), the temporary\nsolution is to use a set of 2 rules (one to match the SG's private ip-address-group and accept, and\nanother to perform SNAT)\nIn order to enable VM-VM communication via public IPs, early SNAT is performed to packets with destination\nmatching public IPs of source VM's SG.","files":[{"path":"net/euca-to-mido.c","url":"https://github.com/eucalyptus/eucalyptus/commit/1212c25e79747dd3f7f99a7d32f316aa64cda84e#diff-0","changeType":"MODIFIED","linesAdded":130,"linesRemoved":6},{"path":"net/euca-to-mido.h","url":"https://github.com/eucalyptus/eucalyptus/commit/1212c25e79747dd3f7f99a7d32f316aa64cda84e#diff-1","changeType":"MODIFIED","linesAdded":3,"linesRemoved":0},{"path":"net/midonet-api.c","url":"https://github.com/eucalyptus/eucalyptus/commit/1212c25e79747dd3f7f99a7d32f316aa64cda84e#diff-2","changeType":"MODIFIED","linesAdded":8,"linesRemoved":3}]}]}],"_instance":{"singleInstance":true,"baseUrl":"https://github.com","name":"GitHub","typeName":"GitHub","id":"github","type":"github"}}]}